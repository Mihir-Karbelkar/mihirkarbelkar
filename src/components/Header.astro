---
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE } from '../consts';
import { getDomainConfig } from '../config/domains';

interface Props {
	domain: string;
	currentPage?: string;
}

const { currentPage } = Astro.props;
const domain = Astro.url.pathname.split('/')?.[1] || 'Localhost';
const config = getDomainConfig(domain);
---

<header class="domain-header" data-domain={domain}>
	<div class="header-content">
		<div class="domain-info">
			<h1 class="domain-title">{domain?.charAt(0)?.toUpperCase() + domain?.slice(1)}</h1>
			<p class="domain-tagline">{config.tagline}</p>
		</div>
		
		<nav class="domain-nav">
			<button class="mobile-menu-button" aria-label="Toggle navigation menu">
				<span class="menu-icon"></span>
			</button>
			<ul class="nav-links">
				{config.pages.map((page: string) => (
					<li>
						<a
							href={`/${page.toLowerCase()}`}
							class={currentPage === page.toLowerCase() ? 'active' : ''}
						>
							{page}
						</a>
					</li>
				))}
			</ul>
		</nav>
	</div>
</header>

<style>
	.domain-header {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		z-index: 1000;
		background-color: #000000;
		box-shadow: var(--shadow-lg);
		transition: all var(--transition-normal);
	}

	.header-content {
		max-width: var(--container-width);
		margin: 0 auto;
		padding: var(--space-4) var(--container-padding);
		display: flex;
		justify-content: space-between;
		align-items: center;
	}

	.domain-info {
		display: flex;
		flex-direction: column;
		justify-content: space-between;
	}

	.domain-title {
		font-size: var(--text-2xl);
		margin: 0;
		color: #FFFFFF;
		font-weight: 700;
		letter-spacing: -0.025em;
	}

	.domain-tagline {
		font-size: var(--text-sm);
		color: var(--accent);
		font-style: italic;
		opacity: 0.8;
		margin: 0;
	}

	.domain-nav {
		position: relative;
	}

	.mobile-menu-button {
		display: none;
		background: none;
		border: none;
		cursor: pointer;
		padding: var(--space-2);
		margin: 0;
	}

	.menu-icon {
		display: block;
		width: 24px;
		height: 2px;
		background-color: #FFFFFF;
		position: relative;
		transition: all var(--transition-fast);
	}

	.menu-icon::before,
	.menu-icon::after {
		content: '';
		position: absolute;
		width: 24px;
		height: 2px;
		background-color: #FFFFFF;
		transition: all var(--transition-fast);
	}

	.menu-icon::before {
		top: -8px;
	}

	.menu-icon::after {
		bottom: -8px;
	}

	.nav-links {
		display: flex;
		gap: var(--space-6);
		list-style: none;
		padding: 0;
		margin: 0;
	}

	.nav-links a {
		color: #FFFFFF;
		text-decoration: none;
		font-weight: 500;
		padding: var(--space-2) var(--space-4);
		position: relative;
		transition: all var(--transition-fast);
		opacity: 0.8;
	}

	.nav-links a::after {
		content: '';
		position: absolute;
		bottom: 0;
		left: 0;
		width: 0;
		height: 2px;
		background-color: var(--accent);
		transition: width var(--transition-fast);
	}

	.nav-links a:hover {
		opacity: 1;
		color: #FFFFFF;
	}

	.nav-links a:hover::after {
		width: 100%;
	}

	.nav-links a.active {
		opacity: 1;
		color: #FFFFFF;
	}

	.nav-links a.active::after {
		width: 100%;
	}

	@media (max-width: 720px) {
		.header-content {
			padding: var(--space-2) var(--container-padding);
		}

		.domain-title {
			font-size: var(--text-xl);
		}

		.domain-tagline {
			font-size: var(--text-xs);
		}

		.mobile-menu-button {
			display: block;
		}

		.nav-links {
			position: absolute;
			top: 100%;
			right: 0;
			background-color: #000000;
			flex-direction: column;
			gap: var(--space-2);
			padding: var(--space-4);
			border-radius: var(--radius-lg);
			box-shadow: var(--shadow-xl);
			transform: translateY(-100%);
			opacity: 0;
			pointer-events: none;
			transition: all var(--transition-normal);
		}

		.nav-links.open {
			transform: translateY(0);
			opacity: 1;
			pointer-events: auto;
		}

		.nav-links a {
			width: 100%;
			text-align: center;
			padding: var(--space-4) var(--space-6);
		}
	}

	@media (hover: none) {
		.nav-links a {
			padding: var(--space-4) var(--space-6);
		}
	}
</style>

<script>
	// Mobile menu toggle
	const menuButton = document.querySelector('.mobile-menu-button');
	const navLinks = document.querySelector('.nav-links');

	menuButton?.addEventListener('click', () => {
		navLinks?.classList.toggle('open');
		menuButton?.classList.toggle('open');
	});

	// Close menu when clicking outside
	document.addEventListener('click', (e: MouseEvent) => {
		const target = e.target as HTMLElement;
		if (!target?.closest('.domain-nav')) {
			navLinks?.classList.remove('open');
			menuButton?.classList.remove('open');
		}
	});

	// Add scroll effect to header
	let lastScroll = 0;
	const header = document.querySelector('.domain-header');

	window.addEventListener('scroll', () => {
		const currentScroll = window.pageYOffset;
		
		if (currentScroll <= 0) {
			header?.classList.remove('scroll-up');
			return;
		}
		
		if (currentScroll > lastScroll && !header?.classList.contains('scroll-down')) {
			// Scroll Down
			header?.classList.remove('scroll-up');
			header?.classList.add('scroll-down');
		} else if (currentScroll < lastScroll && header?.classList.contains('scroll-down')) {
			// Scroll Up
			header?.classList.remove('scroll-down');
			header?.classList.add('scroll-up');
		}
		lastScroll = currentScroll;
	});
</script>
