---
import BaseHead from '../../../components/BaseHead.astro';
import DomainHeader from '../../../components/Header.astro';
import SharedFooter from '../../../components/SharedFooter.astro';
import { getCollection } from 'astro:content';
// Astro's CollectionEntry<'essays'> type may not be available if typegen hasn't run. Fallback to a local type:
type Essay = {
	id: string;
	data: {
		title: string;
		description: string;
		pubDate: Date;
		updatedDate?: Date;
		heroImage?: string;
		readingTime: number;
		tags?: string[];
	};
};
// Typecast to silence linter until Astro typegen is correct
const essays = (await getCollection('essays')) as any as Essay[];
const sortedEssays = essays.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead 
			title="Essays | Politics" 
			description="Thoughtful analysis and commentary on contemporary political issues."
		/>
	</head>
	<body>
		<DomainHeader domain="politics" currentPage="essays" />
		<main>
			<div class="essays-container">
				<h1 class="page-title">Political Essays</h1>
				<p class="page-description">Thoughtful analysis and commentary on contemporary political issues.</p>
				
				<div class="essays-grid">
					{sortedEssays.map((essay: Essay) => (
						<article class="essay-card">
							<a href={`/politics/essays/${essay.id}`}>
								<div class="essay-content">
									<h2 class="essay-title">{essay.data.title}</h2>
									<p class="essay-excerpt">{essay.data.description}</p>
									<div class="essay-meta">
										<time datetime={essay.data.pubDate.toISOString()}>
											{essay.data.pubDate.toLocaleDateString('en-US', {
												year: 'numeric',
												month: 'long',
												day: 'numeric'
											})}
										</time>
										<span class="reading-time">{essay.data.readingTime} min read</span>
									</div>
									{essay.data.tags && (
										<div class="essay-tags">
											{essay.data.tags.map((tag: string) => (
												<span class="tag">{tag}</span>
											))}
										</div>
									)}
								</div>
							</a>
						</article>
					))}
				</div>
			</div>
		</main>
		<SharedFooter />
	</body>
</html>

<style>
	main {
		padding-top: var(--space-24);
		min-height: 100vh;
		background-color: var(--background);
	}

	.essays-container {
		max-width: var(--container-width);
		margin: 0 auto;
		padding: var(--space-8) var(--container-padding);
	}

	.page-title {
		font-size: var(--text-4xl);
		font-weight: 700;
		color: var(--text);
		margin-bottom: var(--space-4);
		letter-spacing: -0.025em;
	}

	.page-description {
		font-size: var(--text-lg);
		color: var(--text);
		opacity: 0.8;
		margin-bottom: var(--space-12);
		max-width: 65ch;
	}

	.essays-grid {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
		gap: var(--space-8);
	}

	.essay-card {
		background-color: var(--primary);
		border-radius: var(--radius-lg);
		overflow: hidden;
		transition: transform var(--transition-fast), box-shadow var(--transition-fast);
	}

	.essay-card:hover {
		transform: translateY(-4px);
		box-shadow: var(--shadow-xl);
	}

	.essay-card a {
		text-decoration: none;
		color: inherit;
		display: block;
		height: 100%;
	}

	.essay-content {
		padding: var(--space-6);
	}

	.essay-title {
		font-size: var(--text-xl);
		font-weight: 700;
		color: var(--text);
		margin-bottom: var(--space-4);
		line-height: 1.3;
	}

	.essay-excerpt {
		font-size: var(--text-base);
		color: var(--text);
		opacity: 0.8;
		margin-bottom: var(--space-4);
		line-height: 1.6;
	}

	.essay-meta {
		display: flex;
		justify-content: space-between;
		align-items: center;
		font-size: var(--text-sm);
		color: var(--text);
		opacity: 0.6;
		margin-bottom: var(--space-4);
	}

	.reading-time {
		display: flex;
		align-items: center;
		gap: var(--space-2);
	}

	.essay-tags {
		display: flex;
		flex-wrap: wrap;
		gap: var(--space-2);
	}

	.tag {
		font-size: var(--text-xs);
		padding: var(--space-1) var(--space-2);
		background-color: var(--accent);
		color: var(--primary);
		border-radius: var(--radius-full);
	}

	@media (max-width: 720px) {
		.essays-container {
			padding: var(--space-6) var(--container-padding);
		}

		.page-title {
			font-size: var(--text-3xl);
		}

		.page-description {
			font-size: var(--text-base);
		}

		.essays-grid {
			grid-template-columns: 1fr;
			gap: var(--space-6);
		}
	}
</style> 