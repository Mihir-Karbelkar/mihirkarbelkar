---
import BaseHead from '../../components/BaseHead.astro';
import DomainHeader from '../../components/Header.astro';
import SharedFooter from '../../components/SharedFooter.astro';
import { getCollection } from 'astro:content';

// Type definition for blog posts
type BlogPost = {
  id: string;
  data: {
    title: string;
    description: string;
    pubDate: Date;
    updatedDate?: Date;
    heroImage?: string;
  };
};

// Fetch and sort blog posts
const posts = (await getCollection('blog')) as any as BlogPost[];
const sortedPosts = posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead 
			title="Tech Blog | Technology" 
			description="Informed innovation is self-empowerment. Latest insights and analysis on technology, software development, and digital innovation."
		/>
	</head>
	<body>
		<DomainHeader domain="tech" currentPage="blog" />
		<main>
			<div class="blog-container">
				<h1 class="domain-title">Tech Blog</h1>
				<p class="page-description">Informed innovation is self-empowerment. Latest insights and analysis on technology, software development, and digital innovation.</p>
				
				<div class="posts-grid">
					{sortedPosts.map((post: BlogPost) => (
						<article class="post-card">
							<a href={`/tech/blog/${post.id}`}>
								{post.data.heroImage && (
									<img 
										src={post.data.heroImage} 
										alt={post.data.title}
										class="post-image"
									/>
								)}
								<div class="post-content">
									<h2 class="post-title">{post.data.title}</h2>
									<p class="post-excerpt">{post.data.description}</p>
									<div class="post-meta">
										<time datetime={post.data.pubDate.toISOString()}>
											{post.data.pubDate.toLocaleDateString('en-US', {
												year: 'numeric',
												month: 'long',
												day: 'numeric'
											})}
										</time>
										{post.data.updatedDate && (
											<span class="updated-date">
												Updated: {post.data.updatedDate.toLocaleDateString('en-US', {
													year: 'numeric',
													month: 'long',
													day: 'numeric'
												})}
											</span>
										)}
									</div>
								</div>
							</a>
						</article>
					))}
				</div>
			</div>
		</main>
		<SharedFooter />
	</body>
</html>

<style>
	main {
		margin-top: var(--header-height);
		min-height: 100vh;
		background-color: var(--background);
	}

	.blog-container {
		max-width: var(--container-width);
		margin: 0 auto;
		padding: var(--space-8) var(--container-padding);
	}

	.domain-title {
		font-size: var(--text-4xl);
		font-weight: 700;
		color: var(--text);
		margin-bottom: var(--space-4);
		letter-spacing: -0.025em;
	}

	.page-description {
		font-size: var(--text-lg);
		color: var(--text);
		opacity: 0.8;
		margin-bottom: var(--space-12);
		max-width: 65ch;
	}

	.posts-grid {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
		gap: var(--space-8);
	}

	.post-card {
		background-color: var(--primary);
		border-radius: var(--radius-lg);
		overflow: hidden;
		transition: transform var(--transition-fast), box-shadow var(--transition-fast);
		border: 1px solid var(--accent);
	}

	.post-card:hover {
		transform: translateY(-4px);
		box-shadow: var(--shadow-xl);
		border-color: var(--text);
	}

	.post-card a {
		text-decoration: none;
		color: inherit;
		display: block;
		height: 100%;
	}

	.post-image {
		width: 100%;
		height: 200px;
		object-fit: cover;
		border-bottom: 1px solid var(--accent);
	}

	.post-content {
		padding: var(--space-6);
	}

	.post-title {
		font-size: var(--text-xl);
		font-weight: 700;
		color: var(--text);
		margin-bottom: var(--space-4);
		line-height: 1.3;
	}

	.post-excerpt {
		font-size: var(--text-base);
		color: var(--text);
		opacity: 0.8;
		margin-bottom: var(--space-4);
		line-height: 1.6;
	}

	.post-meta {
		display: flex;
		flex-direction: column;
		gap: var(--space-2);
		font-size: var(--text-sm);
		color: var(--text);
		opacity: 0.6;
	}

	.updated-date {
		font-size: var(--text-xs);
	}

	@media (max-width: 720px) {
		main {
			margin-top: calc(var(--header-height) - 20px); /* Slightly reduced for mobile */
		}

		.blog-container {
			padding: var(--space-6) var(--container-padding);
		}

		.domain-title {
			font-size: var(--text-3xl);
		}

		.page-description {
			font-size: var(--text-base);
		}

		.posts-grid {
			grid-template-columns: 1fr;
			gap: var(--space-6);
		}

		.post-image {
			height: 160px;
		}
	}
</style> 